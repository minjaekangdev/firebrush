{"version":3,"file":"static/js/376.43a4b81d.chunk.js","mappings":"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","sources":["schemas/RegisterSchema.tsx","components/users/Register.tsx"],"sourcesContent":["import * as Yup from \"yup\";\r\n\r\nexport const RegisterSchema = Yup.object().shape({\r\n  email: Yup.string().email().min(2).max(255).required(\"Required\"),\r\n  password: Yup.string()\r\n    .min(8)\r\n    .max(100)\r\n    .matches(\r\n      /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,})/,\r\n      \"Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and One Special Case Character\"\r\n    )\r\n    .required(\"Required\"),\r\n  passwordConfirm: Yup.string().oneOf(\r\n    [Yup.ref(\"password\"), null],\r\n    \"Passwords must match\"\r\n  ),\r\n  firstName: Yup.string().min(1).max(100).required(\"Required\"),\r\n  lastName: Yup.string().min(1).max(100).required(\"Required\"),\r\n  dob: Yup.date()\r\n    .max(new Date().toLocaleDateString(), \"You aren't born yet..\")\r\n    .required(\"Required\"),\r\n  avatarUrl: Yup.string().url().required(\"Required\"),\r\n  termsAgree: Yup.boolean().oneOf(\r\n    [true],\r\n    \"You must agree to the terms and conditions.\"\r\n  ),\r\n});\r\n","import React from \"react\";\r\nimport { Formik, Form, Field, FormikValues, ErrorMessage } from \"formik\";\r\nimport netUserService from \"../../services/userService\";\r\nimport { AxiosError } from \"axios\";\r\nimport toastr from \"toastr\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport logo from \"../../assets/images/logo2.png\";\r\nimport \"../../assets/css/landing.css\";\r\nimport { RegisterSchema } from \"../../schemas/RegisterSchema\";\r\n\r\nfunction Register() {\r\n  const navigate = useNavigate();\r\n\r\n  const onCreateSuccess = () => {\r\n    navigate(\"/login\");\r\n    toastr.success(\"You're account has been created!\", \"Please login\");\r\n  };\r\n  const onCreateError = (error: AxiosError) => {\r\n    console.log(error);\r\n    toastr.error(\"Something went wrong...\");\r\n  };\r\n  const onSubmit = (values: FormikValues) => {\r\n    netUserService.create(values).then(onCreateSuccess).catch(onCreateError);\r\n  };\r\n\r\n  return (\r\n    <div className=\"landing-bg\">\r\n      <div className=\"container border-1 rounded\">\r\n        <div className=\"row align-items-center justify-content-center min-vh-100\">\r\n          <div className=\"col-12\">\r\n            <div className=\"card\">\r\n              <div className=\"card-body p-5\">\r\n                <div className=\"mb-4\">\r\n                  <img src={logo} alt=\"logo\" className=\"img-fluid\" />\r\n                  <h1>Register</h1>\r\n                  <span>\r\n                    Already have an account?{\" \"}\r\n                    <Link to=\"/login\">Login here!</Link>\r\n                  </span>\r\n                  <Formik\r\n                    enableReinitialize={true}\r\n                    initialValues={{\r\n                      firstName: \"\",\r\n                      lastName: \"\",\r\n                      email: \"\",\r\n                      password: \"\",\r\n                      passwordConfirm: \"\",\r\n                      dob: \"\",\r\n                      avatarUrl: \"\",\r\n                      agreement: false,\r\n                    }}\r\n                    onSubmit={onSubmit}\r\n                    validationSchema={RegisterSchema}\r\n                  >\r\n                    <Form>\r\n                      <div className=\"row mt-4\">\r\n                        <div className=\"col-12 mb-3\">\r\n                          <label htmlFor=\"firstName\">\r\n                            First Name:{\" \"}\r\n                            <ErrorMessage\r\n                              name=\"firstName\"\r\n                              className=\"text-danger\"\r\n                              component=\"span\"\r\n                            />\r\n                          </label>\r\n                          <Field\r\n                            name=\"firstName\"\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                          />\r\n                        </div>\r\n                        <div className=\"col-12 mb-3\">\r\n                          <label htmlFor=\"lastName\">\r\n                            Last Name:{\" \"}\r\n                            <ErrorMessage\r\n                              name=\"lastName\"\r\n                              className=\"text-danger\"\r\n                              component=\"span\"\r\n                            />\r\n                          </label>\r\n                          <Field\r\n                            name=\"lastName\"\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                          />\r\n                        </div>\r\n                        <div className=\"col-12 mb-3\">\r\n                          <label htmlFor=\"email\">\r\n                            Birthday:{\" \"}\r\n                            <ErrorMessage\r\n                              name=\"dob\"\r\n                              className=\"text-danger\"\r\n                              component=\"span\"\r\n                            />\r\n                          </label>\r\n                          <Field\r\n                            name=\"dob\"\r\n                            type=\"date\"\r\n                            className=\"form-control\"\r\n                          />\r\n                        </div>\r\n                        <div className=\"col-12 mb-3\">\r\n                          <label htmlFor=\"email\">\r\n                            Avatar Url:{\" \"}\r\n                            <ErrorMessage\r\n                              name=\"avatarUrl\"\r\n                              className=\"text-danger\"\r\n                              component=\"span\"\r\n                            />\r\n                          </label>\r\n                          <Field\r\n                            name=\"avatarUrl\"\r\n                            type=\"url\"\r\n                            className=\"form-control\"\r\n                          />\r\n                        </div>\r\n                        <div className=\"col-12 mb-3\">\r\n                          <label htmlFor=\"email\">\r\n                            Email:{\" \"}\r\n                            <ErrorMessage\r\n                              name=\"email\"\r\n                              className=\"text-danger\"\r\n                              component=\"span\"\r\n                            />\r\n                          </label>\r\n                          <Field\r\n                            name=\"email\"\r\n                            type=\"email\"\r\n                            className=\"form-control\"\r\n                          />\r\n                        </div>\r\n                        <div className=\"col-12 mb-3\">\r\n                          <label htmlFor=\"password\">\r\n                            Password:{\" \"}\r\n                            <ErrorMessage\r\n                              name=\"password\"\r\n                              className=\"text-danger\"\r\n                              component=\"span\"\r\n                            />\r\n                          </label>\r\n                          <Field\r\n                            name=\"password\"\r\n                            type=\"password\"\r\n                            className=\"form-control\"\r\n                          />\r\n                        </div>\r\n                        <div className=\"col-12 mb-3\">\r\n                          <label htmlFor=\"passwordConfirm\">\r\n                            Password Confirm:{\" \"}\r\n                            <ErrorMessage\r\n                              name=\"passwordConfirm\"\r\n                              className=\"text-danger\"\r\n                              component=\"span\"\r\n                            />\r\n                          </label>\r\n                          <Field\r\n                            name=\"passwordConfirm\"\r\n                            type=\"password\"\r\n                            className=\"form-control\"\r\n                          />\r\n                        </div>\r\n                        <div className=\"col-12 mb-3\">\r\n                          <Field\r\n                            name=\"termsAgree\"\r\n                            type=\"checkbox\"\r\n                            className=\"form-check-input\"\r\n                          />\r\n                          <label htmlFor=\"checkBox\" className=\"mx-2\">\r\n                            I agree to the terms and services.\r\n                            <ErrorMessage\r\n                              name=\"termsAgree\"\r\n                              className=\"text-danger\"\r\n                              component=\"p\"\r\n                            />\r\n                          </label>\r\n                        </div>\r\n                        <div className=\"col-12 mt-3\">\r\n                          <button className=\"btn btn-primary\" type=\"submit\">\r\n                            Register\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </Form>\r\n                  </Formik>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n"],"names":["RegisterSchema","Yup","shape","email","min","max","required","password","matches","passwordConfirm","oneOf","firstName","lastName","dob","Date","toLocaleDateString","avatarUrl","url","termsAgree","navigate","useNavigate","onCreateSuccess","toastr","onCreateError","error","console","log","className","src","logo","alt","to","enableReinitialize","initialValues","agreement","onSubmit","values","netUserService","then","catch","validationSchema","htmlFor","name","component","type"],"sourceRoot":""}