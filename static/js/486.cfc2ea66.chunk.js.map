{"version":3,"file":"static/js/486.cfc2ea66.chunk.js","mappings":"6HAcA,IATA,WAME,OALqBA,EAAAA,EAAAA,IAAe,CAClCC,GAAI,oBACJC,iBALMC,2CAMNC,UAAWC,EAAAA,KAHLC,QAMV,C,kICLA,SAASC,IACP,IAAQC,GAAUC,EAAAA,EAAAA,MAAVD,MACR,GAAsCE,EAAAA,EAAAA,UAAS,IAAG,eAA3CC,EAAW,KAAEC,EAAc,KAclC,OAbAC,EAAAA,EAAAA,YAAU,WACRD,GAAe,WAEb,OADAE,QAAQC,IAAIP,EAAMQ,SACXR,EAAMQ,QAAQC,KAAI,SAACC,GACxB,MAAO,CACLC,MAAOD,EAAKE,SACZC,IAAKH,EAAKI,SAAS,GAAGC,SAAS,GAAGC,SAClCC,IAAKP,EAAKI,SAAS,GAAGC,SAAS,GAAGG,UAEtC,GACF,GACF,GAAG,KAEIC,EAAAA,EAAAA,MACL,+BACE,SAAC,KAAS,CACRC,sBAAsB,gBACtBC,OAAQ,CAAER,IAAK,WAAYI,KAAM,aACjCK,KAAM,GAAG,SAERnB,EAAYM,KAAI,SAACc,GAChB,OACE,SAAC,KAAW,CAA6BC,SAAUD,EAAM,UACvD,gBAAKE,UAAU,cAAa,SAAEF,EAAMZ,SADpBY,EAAMV,IAAMU,EAAMN,IAIxC,SAIJ,uBAEJ,CACA,MAAeS,EAAAA,KAAW3B,E","sources":["components/GoogleApiLoad.tsx","components/map/Map.tsx"],"sourcesContent":["import { useJsApiLoader } from \"@react-google-maps/api\";\r\nimport { defaultMapLibrary } from \"../constants/Defaults\";\r\n\r\nlet key = process.env.REACT_APP_GOOGLE_API_KEY;\r\n\r\nfunction GoogleApiLoad() {\r\n  const { isLoaded } = useJsApiLoader({\r\n    id: \"google-map-script\",\r\n    googleMapsApiKey: key!,\r\n    libraries: defaultMapLibrary,\r\n  });\r\n  return isLoaded;\r\n}\r\n\r\nexport default GoogleApiLoad;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { GoogleMap, InfoWindowF } from \"@react-google-maps/api\";\r\nimport GoogleApiLoad from \"../GoogleApiLoad\";\r\nimport { aEvent, Coord } from \"../../types/Types\";\r\nimport \"../../assets/css/map.css\";\r\n\r\nfunction Map() {\r\n  const { state } = useLocation();\r\n  const [coordinates, setCoordinates] = useState([]);\r\n  useEffect(() => {\r\n    setCoordinates(() => {\r\n      console.log(state.payload);\r\n      return state.payload.map((item: aEvent) => {\r\n        return {\r\n          label: item.headline,\r\n          lat: item.metaData[0].location[0].latitude,\r\n          lng: item.metaData[0].location[0].longitude,\r\n        };\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  return GoogleApiLoad() ? (\r\n    <>\r\n      <GoogleMap\r\n        mapContainerClassName=\"map-container\"\r\n        center={{ lat: 34.0648099, lng: -118.2940402 }}\r\n        zoom={10}\r\n      >\r\n        {coordinates.map((coord: Coord) => {\r\n          return (\r\n            <InfoWindowF key={coord.lat + coord.lng} position={coord}>\r\n              <div className=\"info-window\">{coord.label}</div>\r\n            </InfoWindowF>\r\n          );\r\n        })}\r\n      </GoogleMap>\r\n    </>\r\n  ) : (\r\n    <></>\r\n  );\r\n}\r\nexport default React.memo(Map);\r\n"],"names":["useJsApiLoader","id","googleMapsApiKey","process","libraries","defaultMapLibrary","isLoaded","Map","state","useLocation","useState","coordinates","setCoordinates","useEffect","console","log","payload","map","item","label","headline","lat","metaData","location","latitude","lng","longitude","GoogleApiLoad","mapContainerClassName","center","zoom","coord","position","className","React"],"sourceRoot":""}