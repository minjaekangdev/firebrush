{"version":3,"file":"static/js/617.9108d714.chunk.js","mappings":"2NAoRA,UA1QA,WACE,IAAQA,GAAgBC,EAAAA,EAAAA,YAAWC,EAAAA,GAA3BF,YACR,GACEG,EAAAA,EAAAA,YAA2C,eADtCC,EAAe,KAAEC,EAAkB,KAE1C,GAAgCF,EAAAA,EAAAA,UAAuB,CACrDG,KAAM,GACNC,SAAU,GACVC,QAAS,GACTC,YAAa,GACbC,KAAM,GACNC,SAAU,GACVC,UAAW,GACXC,QAAS,GACTC,SAAU,EACVC,UAAW,EACXC,eAAgB,GAChBC,OAAQ,GACRC,KAAM,GACNC,MAAO,GACPC,QAAS,GACTC,SAAU,GACVC,QAAS,GACTC,UAAWvB,EAAYwB,KACvB,eAnBKC,EAAQ,KAAEC,EAAW,KAqBtBC,EAAqB,SACzBC,GAEAvB,EAAmBuB,EACrB,EAuCMC,EAAkB,SAACC,GACvBC,IAAAA,QAAe,mCACjB,EACMC,EAAgB,SAACC,GACrBF,IAAAA,MAAa,qBACf,EAMA,OAAOG,EAAAA,EAAAA,MACL,gBAAKC,UAAU,aAAY,UACzB,gBAAKA,UAAU,6BAA4B,UACzC,gBAAKA,UAAU,2DAA0D,UACvE,gBAAKA,UAAU,SAAQ,UACrB,gBAAKA,UAAU,OAAM,UACnB,gBAAKA,UAAU,gBAAe,UAC5B,iBAAKA,UAAU,OAAM,WACnB,gBAAKC,IAAKC,EAAMC,IAAI,OAAOH,UAAU,eACrC,eAAIA,UAAU,cAAa,+BAC3B,SAAC,KAAM,CACLI,oBAAoB,EACpBC,cAAef,EACfgB,SAjBD,SAACC,GAChBC,QAAQC,IAAIF,GACZG,EAAAA,EAAAA,OAAuBH,GAAQI,KAAKjB,GAAiBkB,MAAMf,EAC7D,EAcqC,SAElB,gBAAGU,EAAM,EAANA,OAAqB,EAAbM,cAAa,OACvB,SAAC,KAAI,WACH,iBAAKb,UAAU,WAAU,WACvB,iBAAKA,UAAU,cAAa,WAC1B,kBAAOc,QAAQ,OAAM,mBACrB,SAAC,KAAK,CACJ3C,KAAK,OACL4C,KAAK,OACLf,UAAU,eACVgB,YAAY,mBAGhB,iBAAKhB,UAAU,cAAa,WAC1B,kBAAOc,QAAQ,WAAU,uBACzB,SAAC,KAAK,CACJ3C,KAAK,WACL4C,KAAK,OACLf,UAAU,eACVgB,YAAY,sBAGhB,iBAAKhB,UAAU,cAAa,WAC1B,kBAAOc,QAAQ,UAAS,4BACxB,SAAC,KAAK,CACJ3C,KAAK,UACL4C,KAAK,OACLf,UAAU,eACVgB,YAAY,sBAGhB,iBAAKhB,UAAU,cAAa,WAC1B,kBAAOc,QAAQ,cAAa,0BAC5B,SAAC,KAAK,CACJ3C,KAAK,cACL4C,KAAK,OACLf,UAAU,eACVgB,YAAY,yBAGhB,iBAAKhB,UAAU,cAAa,WAC1B,kBAAOc,QAAQ,OAAM,mBACrB,SAAC,KAAK,CACJ3C,KAAK,OACL4C,KAAK,OACLf,UAAU,eACVgB,YAAY,oBAGhB,iBAAKhB,UAAU,cAAa,WAC1B,kBAAOc,QAAQ,YAAW,wBAC1B,SAAC,KAAK,CACJ3C,KAAK,WACL4C,KAAK,MACLf,UAAU,eACVgB,YAAY,mBAGhB,iBAAKhB,UAAU,gBAAe,WAC5B,kBAAOc,QAAQ,YAAW,gCAC1B,SAAC,KAAK,CACJ3C,KAAK,YACL4C,KAAK,iBACLf,UAAU,qBAGd,iBAAKA,UAAU,gBAAe,WAC5B,kBAAOc,QAAQ,YAAW,8BAC1B,SAAC,KAAK,CACJ3C,KAAK,UACL4C,KAAK,iBACLf,UAAU,qBAId,iBAAKA,UAAU,cAAa,WAC1B,kBAAOc,QAAQ,iBAAgB,sBAC/B,SAAC,KAAY,CACXG,OAAQzB,EACR0B,eAAgB,kBA7IrB,SAACX,GAA0B,IAAD,QACzCY,EAAqB,OAAflD,QAAe,IAAfA,GAAoC,QAArB,EAAfA,EAAiBmD,WAAWC,gBAAQ,OAAU,QAAV,EAApC,EAAsCC,gBAAQ,WAA/B,EAAf,EAAgDH,MACtDI,EAAqB,OAAftD,QAAe,IAAfA,GAAoC,QAArB,EAAfA,EAAiBmD,WAAWC,gBAAQ,OAAU,QAAV,EAApC,EAAsCC,gBAAQ,WAA/B,EAAf,EAAgDC,MACtDC,EAAuB,OAAfvD,QAAe,IAAfA,OAAe,EAAfA,EAAiBmD,WAE/Bb,EAAOpB,QAAe,OAALqC,QAAK,IAALA,OAAK,EAALA,EAAOC,kBAExBlB,EAAO5B,SAAWwC,EAClBZ,EAAO3B,UAAY2C,EACnB,cAA6B,OAALC,QAAK,IAALA,OAAK,EAALA,EAAOE,mBAAkB,eAA4C,CAAxF,IAAMC,EAAS,KAElB,OADsBA,EAAUC,MAAM,IAEpC,IAAK,gBACHrB,EAAO1B,eAAiB8C,EAAUE,UAClCvC,EAAST,eAAiB8C,EAAUE,UACpC,MAEF,IAAK,QACHtB,EAAOzB,OAAS6C,EAAUG,WAC1B,MAEF,IAAK,cACHvB,EAAOtB,QAAU0C,EAAUE,UAC3B,MAEF,IAAK,WACHtB,EAAOxB,KAAO4C,EAAUE,UACxB,MACF,IAAK,8BACHtB,EAAOvB,MAAQ2C,EAAUG,WAI/B,CACAvC,EAAYgB,EACd,CA0GkDW,CAAeX,EAAO,EAAC,UAE7C,SAAC,KAAK,CACJpC,KAAK,UACL4C,KAAK,OACLf,UAAU,eACVP,aAAa,aAInB,iBAAKO,UAAU,gBAAe,WAC5B,kBAAOc,QAAQ,iBAAgB,sBAC/B,SAAC,KAAK,CACJ3C,KAAK,iBACL4C,KAAK,OACLf,UAAU,qBAGd,iBAAKA,UAAU,gBAAe,WAC5B,kBAAOc,QAAQ,SAAQ,qBACvB,SAAC,KAAK,CACJ3C,KAAK,SACL4C,KAAK,OACLf,UAAU,eACV+B,MAAOxB,EAAOzB,aAGlB,iBAAKkB,UAAU,gBAAe,WAC5B,kBAAOc,QAAQ,OAAM,mBACrB,SAAC,KAAK,CACJ3C,KAAK,OACL4C,KAAK,OACLf,UAAU,eACV+B,MAAOxB,EAAOxB,WAGlB,iBAAKiB,UAAU,gBAAe,WAC5B,kBAAOc,QAAQ,QAAO,oBACtB,SAAC,KAAK,CACJ3C,KAAK,QACL4C,KAAK,OACLf,UAAU,eACV+B,MAAOxB,EAAOvB,YAGlB,iBAAKgB,UAAU,gBAAe,WAC5B,kBAAOc,QAAQ,UAAS,sBACxB,SAAC,KAAK,CACJ3C,KAAK,UACL4C,KAAK,OACLf,UAAU,eACV+B,MAAOxB,EAAOtB,cAGlB,iBAAKe,UAAU,gBAAe,WAC5B,kBAAOc,QAAQ,QAAO,uBACtB,SAAC,KAAK,CACJ3C,KAAK,WACL4C,KAAK,OACLf,UAAU,eACV+B,MAAOxB,EAAO5B,eAGlB,iBAAKqB,UAAU,gBAAe,WAC5B,kBAAOc,QAAQ,QAAO,wBACtB,SAAC,KAAK,CACJ3C,KAAK,YACL4C,KAAK,OACLf,UAAU,eACV+B,MAAOxB,EAAO3B,gBAIlB,gBAAKoB,UAAU,cAAa,UAC1B,mBAAQA,UAAU,kBAAkBe,KAAK,SAAQ,gCAKhD,oBAWzB,uBAEJ,C,+CCpQA,IATA,WAME,OALqBiB,EAAAA,EAAAA,IAAe,CAClC3C,GAAI,oBACJ4C,iBALMC,2CAMNC,UAAWC,EAAAA,KAHLC,QAMV,C","sources":["components/events/EventForm.tsx","components/layout/GoogleApiLoad.tsx"],"sourcesContent":["import { useContext, useState } from \"react\";\r\nimport { Formik, Form, Field, FormikValues } from \"formik\";\r\nimport { Autocomplete } from \"@react-google-maps/api\";\r\nimport logo from \"../../assets/images/logo2.png\";\r\nimport netEventService from \"../../services/eventService\";\r\nimport { AxiosError, AxiosResponse } from \"axios\";\r\nimport toastr from \"toastr\";\r\nimport { UserContext } from \"../../contexts/UserContext\";\r\nimport GoogleApiLoad from \"../layout/GoogleApiLoad\";\r\n\r\nfunction EventForm() {\r\n  const { currentUser } = useContext(UserContext);\r\n  const [autoCompleteObj, setAutoCompleteObj] =\r\n    useState<google.maps.places.Autocomplete>();\r\n  const [formData, setFormData] = useState<FormikValues>({\r\n    name: \"\",\r\n    headline: \"\",\r\n    summary: \"\",\r\n    description: \"\",\r\n    slug: \"\",\r\n    statusId: \"\",\r\n    dateStart: \"\",\r\n    dateEnd: \"\",\r\n    latitude: 0,\r\n    longitude: 0,\r\n    buildingNumber: \"\",\r\n    street: \"\",\r\n    city: \"\",\r\n    state: \"\",\r\n    zipCode: \"\",\r\n    imageUrl: \"\",\r\n    address: \"\",\r\n    createdBy: currentUser.id,\r\n  });\r\n\r\n  const onAutoCompleteLoad = (\r\n    autocomplete: google.maps.places.Autocomplete\r\n  ) => {\r\n    setAutoCompleteObj(autocomplete);\r\n  };\r\n\r\n  const onPlaceChanged = (values: FormikValues) => {\r\n    const lat = autoCompleteObj?.getPlace().geometry?.location?.lat();\r\n    const lng = autoCompleteObj?.getPlace().geometry?.location?.lng();\r\n    const place = autoCompleteObj?.getPlace();\r\n\r\n    values.address = place?.formatted_address;\r\n\r\n    values.latitude = lat!;\r\n    values.longitude = lng!;\r\n    for (const component of place?.address_components as google.maps.GeocoderAddressComponent[]) {\r\n      const componentType = component.types[0];\r\n      switch (componentType) {\r\n        case \"street_number\": {\r\n          values.buildingNumber = component.long_name;\r\n          formData.buildingNumber = component.long_name;\r\n          break;\r\n        }\r\n        case \"route\": {\r\n          values.street = component.short_name;\r\n          break;\r\n        }\r\n        case \"postal_code\": {\r\n          values.zipCode = component.long_name;\r\n          break;\r\n        }\r\n        case \"locality\":\r\n          values.city = component.long_name;\r\n          break;\r\n        case \"administrative_area_level_1\": {\r\n          values.state = component.short_name;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    setFormData(values);\r\n  };\r\n\r\n  const onCreateSuccess = (response: AxiosResponse) => {\r\n    toastr.success(\"Successfully created your event!\");\r\n  };\r\n  const onCreateError = (error: AxiosError) => {\r\n    toastr.error(\"An error occured..\");\r\n  };\r\n\r\n  const onSubmit = (values: FormikValues) => {\r\n    console.log(values);\r\n    netEventService.create(values).then(onCreateSuccess).catch(onCreateError);\r\n  };\r\n  return GoogleApiLoad() ? (\r\n    <div className=\"landing-bg\">\r\n      <div className=\"container border-1 rounded\">\r\n        <div className=\"row align-items-center justify-content-center min-vh-100\">\r\n          <div className=\"col-12\">\r\n            <div className=\"card\">\r\n              <div className=\"card-body p-5\">\r\n                <div className=\"mb-4\">\r\n                  <img src={logo} alt=\"logo\" className=\"img-fluid\" />\r\n                  <h1 className=\"text-center\">Create an event!</h1>\r\n                  <Formik\r\n                    enableReinitialize={true}\r\n                    initialValues={formData}\r\n                    onSubmit={onSubmit}\r\n                  >\r\n                    {({ values, validateField }) => (\r\n                      <Form>\r\n                        <div className=\"row mt-4\">\r\n                          <div className=\"col-12 mb-3\">\r\n                            <label htmlFor=\"name\">Name</label>\r\n                            <Field\r\n                              name=\"name\"\r\n                              type=\"text\"\r\n                              className=\"form-control\"\r\n                              placeholder=\"Event Name\"\r\n                            />\r\n                          </div>\r\n                          <div className=\"col-12 mb-3\">\r\n                            <label htmlFor=\"headline\">Headline</label>\r\n                            <Field\r\n                              name=\"headline\"\r\n                              type=\"text\"\r\n                              className=\"form-control\"\r\n                              placeholder=\"Main Headline\"\r\n                            />\r\n                          </div>\r\n                          <div className=\"col-12 mb-3\">\r\n                            <label htmlFor=\"summary\">Short Summary</label>\r\n                            <Field\r\n                              name=\"summary\"\r\n                              type=\"text\"\r\n                              className=\"form-control\"\r\n                              placeholder=\"Short summary\"\r\n                            />\r\n                          </div>\r\n                          <div className=\"col-12 mb-3\">\r\n                            <label htmlFor=\"description\">Description</label>\r\n                            <Field\r\n                              name=\"description\"\r\n                              type=\"text\"\r\n                              className=\"form-control\"\r\n                              placeholder=\"Full description\"\r\n                            />\r\n                          </div>\r\n                          <div className=\"col-12 mb-3\">\r\n                            <label htmlFor=\"slug\">Slug</label>\r\n                            <Field\r\n                              name=\"slug\"\r\n                              type=\"text\"\r\n                              className=\"form-control\"\r\n                              placeholder=\"Unique slug\"\r\n                            />\r\n                          </div>\r\n                          <div className=\"col-12 mb-3\">\r\n                            <label htmlFor=\"dateStart\">Image URL</label>\r\n                            <Field\r\n                              name=\"imageUrl\"\r\n                              type=\"url\"\r\n                              className=\"form-control\"\r\n                              placeholder=\"https://..\"\r\n                            />\r\n                          </div>\r\n                          <div className=\"col-md-6 mb-3\">\r\n                            <label htmlFor=\"dateStart\">Start Date & Time</label>\r\n                            <Field\r\n                              name=\"dateStart\"\r\n                              type=\"datetime-local\"\r\n                              className=\"form-control\"\r\n                            />\r\n                          </div>\r\n                          <div className=\"col-md-6 mb-3\">\r\n                            <label htmlFor=\"dateStart\">End Date & Time</label>\r\n                            <Field\r\n                              name=\"dateEnd\"\r\n                              type=\"datetime-local\"\r\n                              className=\"form-control\"\r\n                            />\r\n                          </div>\r\n\r\n                          <div className=\"col-12 mb-3\">\r\n                            <label htmlFor=\"buildingNumber\">Address</label>\r\n                            <Autocomplete\r\n                              onLoad={onAutoCompleteLoad}\r\n                              onPlaceChanged={() => onPlaceChanged(values)}\r\n                            >\r\n                              <Field\r\n                                name=\"address\"\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                autocomplete=\"on\"\r\n                              />\r\n                            </Autocomplete>\r\n                          </div>\r\n                          <div className=\"col-md-2 mb-3\">\r\n                            <label htmlFor=\"buildingNumber\">Street#</label>\r\n                            <Field\r\n                              name=\"buildingNumber\"\r\n                              type=\"text\"\r\n                              className=\"form-control\"\r\n                            />\r\n                          </div>\r\n                          <div className=\"col-md-4 mb-3\">\r\n                            <label htmlFor=\"street\">Street</label>\r\n                            <Field\r\n                              name=\"street\"\r\n                              type=\"text\"\r\n                              className=\"form-control\"\r\n                              value={values.street}\r\n                            />\r\n                          </div>\r\n                          <div className=\"col-md-2 mb-3\">\r\n                            <label htmlFor=\"city\">City</label>\r\n                            <Field\r\n                              name=\"city\"\r\n                              type=\"text\"\r\n                              className=\"form-control\"\r\n                              value={values.city}\r\n                            />\r\n                          </div>\r\n                          <div className=\"col-md-2 mb-3\">\r\n                            <label htmlFor=\"state\">State</label>\r\n                            <Field\r\n                              name=\"state\"\r\n                              type=\"text\"\r\n                              className=\"form-control\"\r\n                              value={values.state}\r\n                            />\r\n                          </div>\r\n                          <div className=\"col-md-2 mb-3\">\r\n                            <label htmlFor=\"zipCode\">ZipCode</label>\r\n                            <Field\r\n                              name=\"zipCode\"\r\n                              type=\"text\"\r\n                              className=\"form-control\"\r\n                              value={values.zipCode}\r\n                            />\r\n                          </div>\r\n                          <div className=\"col-xl-6 mb-3\">\r\n                            <label htmlFor=\"state\">Latitude</label>\r\n                            <Field\r\n                              name=\"latitude\"\r\n                              type=\"text\"\r\n                              className=\"form-control\"\r\n                              value={values.latitude}\r\n                            />\r\n                          </div>\r\n                          <div className=\"col-xl-6 mb-3\">\r\n                            <label htmlFor=\"state\">Longitude</label>\r\n                            <Field\r\n                              name=\"longitude\"\r\n                              type=\"text\"\r\n                              className=\"form-control\"\r\n                              value={values.longitude}\r\n                            />\r\n                          </div>\r\n\r\n                          <div className=\"col-12 mt-3\">\r\n                            <button className=\"btn btn-primary\" type=\"submit\">\r\n                              Create Event\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      </Form>\r\n                    )}\r\n                  </Formik>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <></>\r\n  );\r\n}\r\n\r\nexport default EventForm;\r\n","import { useJsApiLoader } from \"@react-google-maps/api\";\r\nimport { defaultMapLibrary } from \"../../constants/Defaults\";\r\n\r\nlet key = process.env.REACT_APP_GOOGLE_API_KEY;\r\n\r\nfunction GoogleApiLoad() {\r\n  const { isLoaded } = useJsApiLoader({\r\n    id: \"google-map-script\",\r\n    googleMapsApiKey: key!,\r\n    libraries: defaultMapLibrary,\r\n  });\r\n  return isLoaded;\r\n}\r\n\r\nexport default GoogleApiLoad;\r\n"],"names":["currentUser","useContext","UserContext","useState","autoCompleteObj","setAutoCompleteObj","name","headline","summary","description","slug","statusId","dateStart","dateEnd","latitude","longitude","buildingNumber","street","city","state","zipCode","imageUrl","address","createdBy","id","formData","setFormData","onAutoCompleteLoad","autocomplete","onCreateSuccess","response","toastr","onCreateError","error","GoogleApiLoad","className","src","logo","alt","enableReinitialize","initialValues","onSubmit","values","console","log","netEventService","then","catch","validateField","htmlFor","type","placeholder","onLoad","onPlaceChanged","lat","getPlace","geometry","location","lng","place","formatted_address","address_components","component","types","long_name","short_name","value","useJsApiLoader","googleMapsApiKey","process","libraries","defaultMapLibrary","isLoaded"],"sourceRoot":""}